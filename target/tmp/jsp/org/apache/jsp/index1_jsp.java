/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.5.v20170502
 * Generated at: 2017-06-13 02:16:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <title>批量上传白名单</title>\n");
      out.write("    <link href=\"/static/css/jquery-ui.css\" rel=\"stylesheet\" media=\"screen\">\n");
      out.write("    <link href=\"/static/css/jquery-ui.theme.css\" rel=\"stylesheet\" media=\"screen\">\n");
      out.write("    <script type=\"text/javascript\" src=\"/static/js/jquery.min.js\" charset=\"UTF-8\"></script>\n");
      out.write("    <script type=\"text/javascript\" src=\"/static/js/jquery-ui.js\" charset=\"UTF-8\"></script>\n");
      out.write("    <script type=\"text/javascript\" src=\"/static/js/jquery-form.js\" charset=\"UTF-8\"></script>\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<script type=\"application/javascript\">\n");
      out.write("\n");
      out.write("    $(function () {\n");
      out.write("\n");
      out.write("\n");
      out.write("        $(\"#dialog\").dialog({\n");
      out.write("            autoOpen: false,\n");
      out.write("            modal: true,\n");
      out.write("            height: 300,\n");
      out.write("            width: 600,\n");
      out.write("            buttons: {\n");
      out.write("                \"关闭\": function () {\n");
      out.write("                    $(this).dialog('close');\n");
      out.write("                    window.location.reload();\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("\n");
      out.write("        });\n");
      out.write("\n");
      out.write("\n");
      out.write("        $(\"#upload\").click(function () {\n");
      out.write("            var file = $(\"#file\").val();\n");
      out.write("            if (file.length == 0) {\n");
      out.write("                $(\"#comment\").html(\"请选择要上传的文件\")\n");
      out.write("                $(\"#dialog\").dialog(\"open\")\n");
      out.write("                return false\n");
      out.write("            }\n");
      out.write("            var options={\n");
      out.write("                dataType:  'json',\n");
      out.write("                success:function(data)\n");
      out.write("                {\n");
      out.write("                    if(data.msg){\n");
      out.write("                        $(\"#comment\").html(\"上传成功\")\n");
      out.write("                        $(\"#dialog\").dialog(\"open\")\n");
      out.write("\n");
      out.write("                    }else {\n");
      out.write("                        console.log(data.length)\n");
      out.write("                        var show=\"上传失败：<br><br>\"\n");
      out.write("                        for(var i=0;i<data.length;i++){\n");
      out.write("                            show+=\"第\"+data[i].row+\"的第\"+data[i].column+\"列\"+data[i].msg+\"<br> <br>\"\n");
      out.write("                        }\n");
      out.write("                        $(\"#comment\").html(show)\n");
      out.write("                        $(\"#dialog\").dialog(\"open\")\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("\n");
      out.write("                }\n");
      out.write("\n");
      out.write("\n");
      out.write("            }\n");
      out.write("            $(\"#form1\").ajaxSubmit(options)\n");
      out.write("        })\n");
      out.write("\n");
      out.write("\n");
      out.write("    })\n");
      out.write("</script>\n");
      out.write("<body>\n");
      out.write("<form id=\"form1\" action=\"/upload\" method=\"post\" enctype=\"multipart/form-data\">\n");
      out.write("    <h2>文件上传</h2>\n");
      out.write("    文件:<input id=\"file\" type=\"file\" name=\"uploadFile\"/><br/><br/>\n");
      out.write("    <input id=\"upload\" type=\"button\" value=\"上传\"/>\n");
      out.write("</form>\n");
      out.write("\n");
      out.write("<div id=\"dialog\" title=\"结果通知\">\n");
      out.write("    <p id=\"comment\"></p>\n");
      out.write("</div>\n");
      out.write("<button id=\"add\">add</button>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
